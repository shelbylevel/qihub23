---
title: "Social Determinants of Health in Ohio"
author: 'Shelby Level'
format: 
  html:
    toc: true
    toc-depth: 2
    toc-location: left
    self-contained: true
    css: css/style.css

---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, cache = FALSE)
```

# Contents of AHRQ SDOH Database

The Social Determinants of Health (SDOH) database from AHRQ compiles SDOH-related variables across multiple domains from 87 sources including multiple federal and other data sources. The downloadable files contain a total of 675 variables available by year from 2009 through 2020. Data is available across three geography levels: all 675 variables are available by county level, 319 are available by ZIP code, and 321 variables are available by census tract.

These variables are organized into five main categories containing several topics each: social context (demographics, disability, immigration, living conditions), economic context (employment, income, poverty), education (attainment), physical infrastructure (environment, housing, internet, migration, transportation), and healthcare context (characteristics of facilities, characteristics of providers, distance to provider, health insurance status, health outcomes, health care quality, utilization and costs).

```{r packages}
library(tidyverse)
```


```{r readin-2020-data, include=FALSE, cache=TRUE}
library(readxl)

url0 = "https://www.ahrq.gov/sites/default/files/wysiwyg/sdoh/SDOH_2020_COUNTY_1_0.xlsx"
destfile <- tempfile()
download.file(url0, destfile, mode = 'wb')
readxl::read_excel(
  destfile, sheet = 2
  ) %>%
  janitor::clean_names() %>%
  filter(
    statefips == 39
    ) -> sdoh_county

url0 = "https://www.ahrq.gov/sites/default/files/wysiwyg/sdoh/SDOH_2020_ZIPCODE_1_0.xlsx"
destfile <- tempfile()
download.file(url0, destfile, mode = 'wb')
readxl::read_excel(
  destfile, sheet = 2
  ) %>%
  janitor::clean_names() %>%
  filter(
    statefips == 39
    ) -> sdoh_zip

url0 = "https://www.ahrq.gov/downloads/sdoh/sdoh_2020_tract_1_0.xlsx"
destfile <- tempfile()
download.file(url0, destfile, mode = 'wb')
readxl::read_excel(
  destfile, sheet = 2
  ) %>%
  janitor::clean_names() %>%
  filter(
    statefips == 39
    ) -> sdoh_tract

```

```{r appalachian-counties, include = FALSE}

c(
  "Adams", "Ashtabula", "Athens", "Belmont", "Brown", 
  "Carroll", "Clermont", "Columbiana", "Coshocton", 
  "Gallia", "Guernsey", "Harrison", "Highland", "Hocking",
  "Holmes", "Jackson", "Jefferson", "Lawrence", "Mahoning",
  "Meigs", "Monroe", "Morgan", "Muskingum", "Noble", 
  "Perry", "Pike", "Ross", "Scioto", "Trumbull", 
  "Tuscarawas", "Vinton", "Washington"
  ) -> appalachian.ohio 

```

```{r pull-geometry-data,include=FALSE}
library(tigris)

counties(
  state = 'OH',
  cb = TRUE,  #clip boundaries
  year = 2020
) -> tigcounties

zctas(
  cb = TRUE,
  year = 2020
) -> tigzctas

tracts(
  cb = TRUE,
  year = 2020
) -> tigtracts

```

```{r app-map-outline}

tigcounties %>% 
  mutate(
    appalachian = ifelse(
      NAME %in% appalachian.ohio, 
      "Appalachian", 
      "Not Appalachian"
      )
  ) %>% 
  filter(appalachian == "Appalachian") -> appmapcounty

tigtracts %>%
  filter(
    STATEFP == 39
  ) %>%
  mutate(
    county = stringr::str_remove_all(NAMELSADCO, " County"),
    appalachian = ifelse(
      county %in% appalachian.ohio, 
      "Appalachian", 
      "Not Appalachian"
      )
  ) %>% 
  filter(
    appalachian == "Appalachian"
    ) -> appmaptract

```

```{r athens-co-outline}

tigcounties %>%
  filter(
    NAME == 'Athens'
  ) -> athensmap
  
```

```{r merge-sdoh-geometry}

# need to start with geometry df in order to keep geometry data

tigcounties %>%
  left_join(
    sdoh_county,
    by = c('GEOID' = 'countyfips')
  ) %>%
  mutate(
    appalachian = ifelse(
      NAME %in% appalachian.ohio, 
      "Appalachian", 
      "Not Appalachian"
      )
    ) -> county_df

# using inner join to filter by OH
tigzctas %>%
  inner_join(
    sdoh_zip,
    by = c('ZCTA5CE20' = 'zcta')
  ) -> zcta_df

# right join to not lose any from sdoh df
tigtracts %>%
  right_join(
    sdoh_tract,
    by = c('GEOID' = 'tractfips')
  ) %>%
  mutate(
    county = stringr::str_remove_all(NAMELSADCO, " County"),
    appalachian = ifelse(
      county %in% appalachian.ohio, 
      "Appalachian", 
      "Not Appalachian"
      )
  ) -> tract_df

```

```{r county-pop-map, fig.cap = "Figure 1: Ohio's Appalachian and Non-Appalachian Counties", fig.height = 9, fig.width = 9, include = TRUE}

county_df %>%
  ggplot() +
  geom_sf(
    aes(fill = acs_tot_pop_wt),
    color = "grey75"
    ) +
  geom_sf_text(
    aes(
      label = NAME
      ),
    color = "black",
    size = 2.75
    ) + 
  geom_sf(
    data = sf::st_union(appmapcounty), 
    color = "#FA4616", size = 3, alpha = 0
    ) +   
  coord_sf(crs = 4326) +
  ggthemes::theme_map() +
  theme(legend.position = "right") +
  scale_fill_gradient2(low = "#E7ECC3", mid = "#F9F7ED", high = "#00694E") +
  labs(
    fill = 'Total Population'
    )

```

```{r athens-zcta-pop-map, fig.cap = "Figure 2: Athens County Zip Codes", fig.height = 9, fig.width = 9, include = TRUE}

zcta_df %>%
  mutate(
    zipcode_num = as.integer(zipcode)
  ) %>%
  filter(
    zipcode_num %in% c(45701, 45710, 45711, 45716, 45719, 43728, 45723, 45732, 45735, 45740, 45742, 45761, 45764, 45766, 45776, 45778, 45780, 45782)
  ) %>%
  ggplot() +
  geom_sf(
    aes(fill = acs_tot_pop_wt_zc),
    color = "grey75"
    ) +
  geom_sf_text(
    aes(
      label = NAME20
      ),
    color = "black",
    size = 2.75
    ) + 
  geom_sf(
    data = athensmap, 
    color = "#FA4616", size = 3, alpha = 0
    ) +   
  coord_sf(crs = 4326) +
  ggthemes::theme_map() +
  theme(legend.position = "right") +
  scale_fill_gradient2(low = "#E7ECC3", mid = "#F9F7ED", high = "#00694E") +
  labs(
    fill = 'Total Population'
    )

```

```{r athens-tract-pop-map, fig.cap = "Figure 3: Athens County Census Tracts", fig.height = 9, fig.width = 9, include = TRUE}

tract_df %>%
  filter(
    COUNTYFP == '009'
  ) %>%
  ggplot() +
  geom_sf(
    aes(fill = acs_tot_pop_wt),
    color = "grey75"
    ) + 
  coord_sf(crs = 4326) +
  ggthemes::theme_map() +
  theme(legend.position = "right") +
  scale_fill_gradient2(low = "#E7ECC3", mid = "#F9F7ED", high = "#00694E") +
  labs(
    fill = 'Total Population'
    )

```

```{r median-household-income-county, fig.cap = "Median Household Income by County", fig.height = 9, fig.width = 9, include = TRUE}

county_df %>%
  ggplot() +
  geom_sf(
    aes(fill = acs_median_hh_inc),
    color = "white") +
  geom_sf_text(
    aes(
      label = NAME
      ),
    color = "black",
    size = 2.75
    ) + 
  geom_sf(
    data = sf::st_union(appmapcounty), 
    color = "#FA4616", size = 3, alpha = 0
    ) +   
  coord_sf(crs = 4326) +
  ggthemes::theme_map() +
  theme(legend.position = "bottom") +
  scale_fill_gradient2(low = "#E7ECC3", mid = "#F9F7ED", high = "#00694E") + 
  labs(fill = "Dollars")
#  scale_fill_gradientn(colours = terrain.colors(5)) 

```

```{r median-household-income-zipcode, fig.cap = "Median Household Income by Zip Code", fig.height = 9, fig.width = 9, include = TRUE}

zcta_df %>%
  ggplot() +
  geom_sf(
    aes(fill = acs_median_hh_inc_zc),
    color = "white") +
  geom_sf(
    data = sf::st_union(appmapcounty), 
    color = "#FA4616", size = 3, alpha = 0
    ) +   
  coord_sf(crs = 4326) +
  ggthemes::theme_map() +
  theme(legend.position = "bottom") +
  scale_fill_gradient2(low = "#E7ECC3", mid = "#F9F7ED", high = "#00694E") + 
  labs(fill = "Dollars")
#  scale_fill_gradientn(colours = terrain.colors(5)) 

```

```{r median-household-income-tract, fig.cap = "Median Household Income by Census Tract", fig.height = 9, fig.width = 9, include = TRUE}

tract_df %>%
  ggplot() +
  geom_sf(
    aes(fill = acs_median_hh_inc),
    color = "white") +
  geom_sf(
    data = sf::st_union(appmaptract), 
    color = "#FA4616", size = 3, alpha = 0
    ) +   
  coord_sf(crs = 4326) +
  ggthemes::theme_map() +
  theme(legend.position = "bottom") +
  scale_fill_gradient2(low = "#E7ECC3", mid = "#F9F7ED", high = "#00694E") + 
  labs(fill = "Dollars")
#  scale_fill_gradientn(colours = terrain.colors(5)) 

```

## SDOH Variables Available at the Census Tract Level

| Variable Name                | Description                                                                                                           |
|:-----------------|:-----------------------------------------------------|
| ACS_PCT_CHILD_DISAB          | Percentage of children with a disability (ages 17 and below)                                                          |
| ACS_PCT_DISABLE              | Percentage of population with a disability                                                                            |
| ACS_PCT_HH_NO_INTERNET       | ACS_PCT_HH_NO_INTERNET                                                                                                |
| ACS_PCT_HH_NO_COMP_DEV       | ACS_PCT_HH_NO_COMP_DEV                                                                                                |
| ACS_PCT_EMPLOYED             | Percentage of civilian labor force that is employed (ages 16 and over)                                                |
| ACS_PCT_NOT_LABOR            | Percentage of population not in labor force (ages 16 and over)                                                        |
| ACS_MEDIAN_HH_INC            | Median household income (dollars, inflation-adjusted to data file year)                                               |
| ACS_PCT_NONVET_POV_18_64     | Percentage of civilian nonveterans with income below the poverty level in the past 12 months (between ages 18 and 64) |
| ACS_PCT_PERSON_INC_BELOW99   | Percentage of population with an income to poverty ratio under 1.00                                                   |
| ACS_PCT_INC50                | Percentage of population with income to poverty ratio under 0.50                                                      |
| ACS_PCT_LT_HS                | Percentage of population with less than high school education (ages 25 and over)                                      |
| ACS_PCT_HU_MOBILE_HOME       | Percentage of housing units that are mobile homes                                                                     |
| ACS_PCT_OWNER_HU_COST_50PCT  | Percentage of owner-occupied housing units with rent equal to 50 percent or more of household income                  |
| ACS_PCT_RENTER_HU_COST_50PCT | Percentage of renter-occupied housing units with rent equal to 50 percent or more of household income                 |
| ACS_PCT_WORK_NO_CAR          | Percentage of workers in households with no vehicle available (ages 16 and over)                                      |
| ACS_PCT_UNINSURED_BELOW64    | Percentage of population with no health insurance (ages 64 and below)                                                 |
| POS_DIST_CLINIC_TRACT        | Distance in miles to the nearest health clinic (FQHC, RHC), calculated using population weighted tract centroids      |

No chronic health data available


```{r}

readxl::read_excel(
  'SDOH_2020_Codebook_1_0.xlsx', sheet = 4
) %>%
  select(
    1:5
  ) %>%
  DT::datatable(
    rownames = FALSE
  )
  
```


# PLACES Data

```{r readin-places-data, include=FALSE, cache=TRUE, eval=FALSE}

library(tidyverse)

url0 = "https://data.cdc.gov/api/views/swc5-untb/rows.csv?accessType=DOWNLOAD"
destfile <- tempfile()
download.file(url0, destfile, mode = 'wb')
read.csv(
  destfile
  ) %>%
  janitor::clean_names() %>%
  filter(
    state_abbr == 'OH',
    year == 2021,
    data_value_type == 'Age-adjusted prevalence'
  ) -> places_county


#url0 = "https://data.cdc.gov/api/views/qnzd-25i4/rows.csv?accessType=DOWNLOAD"
#destfile <- tempfile()
#download.file(url0, destfile, mode = 'wb')
read.csv(here::here(
  'data',
  'PLACES_zip_2023.csv'
  )) %>% 
  #destfile
  #) %>%
  janitor::clean_names() %>%
  filter(
    year == 2021
    #data_value_type == 'Age-adjusted prevalence'
  ) -> places_zip


#url0 = "https://data.cdc.gov/api/views/cwsq-ngmh/rows.csv?accessType=DOWNLOAD"
#destfile <- tempfile()
#download.file(url0, destfile, mode = 'wb')
read.csv(here::here(
  'data',
  'PLACES_tract_2023.csv'
  )) %>% 
  #destfile
  #) %>%
  janitor::clean_names() %>%
  filter(
    state_abbr == 'OH',
    year == 2021
    #data_value_type == 'Age-adjusted prevalence'
  ) -> places_tract
```

```{r add-geometry-to-places-data, include=FALSE, eval=FALSE}

places_county %>%
   inner_join(
    df_county,
    by = c("location_name" = "county"),
    relationship = 'many-to-many'
             ) -> placescounty

df_zip %>%
  inner_join(
    places_zip,
    by = c("zcta" = "location_name"),
    relationship = 'many-to-many'
             ) -> placeszip

places_tract %>%
   inner_join(
    df_tract,
    by = c("location_name" = "GEOID"),
    relationship = 'many-to-many'
             ) -> placestract
```

# CHR Data

```{r readin-chr-data}

url0 = "https://www.countyhealthrankings.org/sites/default/files/media/document/2023%20County%20Health%20Rankings%20Ohio%20Data%20-%20v3.xlsx"
destfile <- tempfile()
download.file(url0, destfile, mode = 'wb')
readxl::read_excel(
  destfile, sheet = 4, skip = 1
  ) %>%
  janitor::clean_names() -> chr_ranked

url0 = "https://www.countyhealthrankings.org/sites/default/files/media/document/2023%20County%20Health%20Rankings%20Ohio%20Data%20-%20v3.xlsx"
destfile <- tempfile()
download.file(url0, destfile, mode = 'wb')
readxl::read_excel(
  destfile, sheet = 5, skip = 1
  ) %>%
  janitor::clean_names() -> chr_unranked

```

```{r add-geometry-to-chr}

tigcounties %>%
  left_join(
    chr_unranked,
    by = c('GEOID' = 'fips')
  ) %>%
  mutate(
    appalachian = ifelse(
      NAME %in% appalachian.ohio, 
      "Appalachian", 
      "Not Appalachian"
      )
    ) -> unranked_df

tigcounties %>%
  left_join(
    chr_ranked,
    by = c('GEOID' = 'fips')
  ) %>%
  mutate(
    appalachian = ifelse(
      NAME %in% appalachian.ohio, 
      "Appalachian", 
      "Not Appalachian"
      )
    ) -> ranked_df

```

```{r county-diabetes, fig.cap = "Percent of Adults with Diabetes", fig.height = 9, fig.width = 9, include = TRUE}

unranked_df %>%
  ggplot() +
  geom_sf(
    aes(fill = percent_adults_with_diabetes)) +
  geom_sf_text(
    aes(
      label = county
      ),
    color = "black",
    size = 2.75
    ) + 
  geom_sf(
    data = sf::st_union(appmapcounty), 
    color = "#FA4616", size = 3, alpha = 0
    ) +   
  coord_sf(crs = 4326) +
  ggthemes::theme_map() +
  theme(legend.position = "bottom") +
  scale_fill_gradient2(low = "#E7ECC3", mid = "#F9F7ED", high = "#00694E") + 
  labs(fill = "Percent",
       caption = "Source: County Health Rankings (2020)")

```

```{r appalachia-diabetes, fig.cap = "Percent of Adults with Diabetes", fig.height = 9, fig.width = 9, include = TRUE}

unranked_df %>%
  filter(
    appalachian == 'Appalachian'
  ) %>%
  ggplot() +
  geom_sf(
    aes(fill = percent_adults_with_diabetes)) +
  geom_sf_text(
    aes(
      label = county
      ),
    color = "black",
    size = 2.75
    ) + 
  geom_sf(
    data = sf::st_union(appmapcounty), 
    color = "#FA4616", size = 3, alpha = 0
    ) +   
  coord_sf(crs = 4326) +
  ggthemes::theme_map() +
  theme(legend.position = "bottom") +
  scale_fill_gradient2(low = "#E7ECC3", mid = "#F9F7ED", high = "#00694E") + 
  labs(fill = "Percent")

```

```{r , eval=FALSE}

unranked_df %>%
  ggplot() +
  geom_point(
    aes(
      x = 
    )
  )

aes(color = fill =SDOH metric)

size_measure = (size of points)
```

